.home-toolbar {
    position: fixed;
    top: 40px;
    /* pinned below your top-level tab bar if you have one */
    left: 0;
    width: 100%;
    height: 50px;
    background-color: #fafafa;
    border-bottom: 1px solid #ccc;
    z-index: 9998;

    /* Key: use a single row layout, no space-between. */
    display: flex;
    align-items: center;

    /* Some horizontal padding around the edges if desired. */
    padding: 0 10px;

    /* gap adds a little space between the button & the toolbar */
    gap: 8px;
}

/* Example styling if you want a “folder” icon or something that acts like a button. */
.browse-icon {
    background: #e9e9e9;
    border: 1px solid #ccc;
    border-radius: 4px;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;

    svg {
        fill: #444;
    }

    &:hover {
        background: #ddd;
    }
}


/* Or, alternatively, we could just do `.home-toolbar { justify-content: space-between; }`
     and place all Explorer toolbar stuff directly on the left, the button on the right. 
     But using .explorer-left and .explorer-right is more structured. */


/* The main content below both pinned bars */
.actual-content {
    margin-top: 90px;
    /* 40px + 50px = 90px */
    /* So .actual-content starts below both bars */
    /* We can make this container flex too if needed. */
}

/* The file-area can remain as is or be your main container. 
     If you want it to flex, that’s fine, but typically it’s just a block. */
.file-area {
    /* you can keep flex:1 if you want a layout that grows, 
       but it's not strictly needed if the entire window is scrolling. */
    display: flex;
    flex-direction: column;
}

/* The content-area is your scrollable region or just the normal content. 
     If the entire window is scrolling, 
     you might not need 'overflow-y: auto;' here.
     Only do 'overflow-y: auto;' if .content-area is your actual scroll container. */
.content-area {
    /* If you want this to scroll internally: 
       height: calc(100vh - 90px); 
       overflow-y: auto; 
     */
    padding: 20px;
    background-color: #fff;
}

/* If you want to keep the home page layout the same, that’s fine. 
     The key is your second bar is pinned at top:40px and the content is margin-top:90px. */

/* ============== Context Menus / Submenus ============= */
.context-menu {
    position: fixed;
    background: #fff;
    border: 1px solid #ccc;
    z-index: 9999;
    width: 200px;
}

.menu-item {
    padding: 8px 12px;
    cursor: pointer;
    user-select: none;
    white-space: nowrap;

    &:hover {
        background: #eee;
    }
}

.submenu {
    position: absolute;
    left: 100%;
    top: 0;
    min-width: 150px;
    background: #fff;
    border: 1px solid #ccc;
}

.submenu-item {
    padding: 8px 12px;
    white-space: nowrap;
    cursor: pointer;

    &:hover {
        background: #eee;
    }
}

.flip-submenu {
    left: -150px;
}

.menu-item.disabled {
    color: #aaa; // Gray out the text.
    pointer-events: none; // Prevent click events.
    cursor: not-allowed;
}